Make alias permanent


We have at least two ways of creating aliases "forever".

First, take a look on .bashrc file.

grep "alias " .bashrc

As we can see, there are some entries for aliases. Let's add our previous one to .bashrc. We don't care about the strict location in the file for now. We'll add it on the end.

echo "alias lh='ls -alh'" >> .bashrc

Let's see:

grep "alias " .bashrc

In order to use this alias we need to load .bashrc into our session.

source ./.bashrc

source is very useful in many cases. It reads and executes scripts (or should we say - content of the files, as it doesn't need to be script) in current shell. By default, when we execute a script, it will be executed in its own shell. We will come back to this context soon.

Check the alias:

lh

Another file, where we can add our alias is .bash_aliases. This file should be loaded automatically when .bashrc is loaded.

In order to be sure, we need to check if the proper block is defined in .bashrc:

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi
We can check if we have the file already define, if not we should create it. But with redirections we are able to add something to file (if file exists), or add new file. Let's use it.

echo "alias lh1='ls -alh'" >> .bash_aliases

We can list our file:

cat .bash_aliases

And load it to our current session:

source ./.bashrc

Please, notice that we didn't load the .bash_aliases, but .bashrc. Just a few lines above we have the if statement in order to load additional file.

Let's check our aliases:

alias

And execute the new alias:

lh1